"0","greedy_prune_related = function(kc_thres, kc_mat) {"
"0","  n_probands = dim(kc_mat)[1]"
"0","  "
"0","  # A mask vector of which individuals to include."
"0","  mask_related <- rep(TRUE, n_probands)"
"0","  "
"0","  # Keep track of indexes."
"0","  idx_proband <- seq(1, n_probands)"
"0","  "
"0","  # Lower triangular matrix."
"0","  kc_tri <- kc_mat"
"0","  kc_tri[upper.tri(kc_tri)] <- 0"
"0","  diag(kc_tri) <- 0"
"0","  "
"0","  # Check whether relationships above the specified degree exist."
"0","  cond <- sum(kc_tri > kc_thres) > 0"
"0","  # While such relationships exist."
"0","  while(cond) {"
"0","    # Count the number of first or second degree relationships per person."
"0","    n_related <- colSums(kc_tri[mask_related, mask_related] > kc_thres)"
"0","    "
"0","    # Get the index of the individual with the highest number of these relationships."
"0","    # Resolve redundancies randomly by picking the first one."
"0","    idx <- idx_proband[mask_related][n_related == max(n_related)][1]"
"0","    "
"0","    # Exclude this proband."
"0","    mask_related[idx] <- FALSE"
"0","    "
"0","    # Update condition."
"0","    cond <- sum(kc_tri[mask_related, mask_related] > kc_thres) > 0"
"0","  }"
"0","  "
"0","  mask_related"
"0","}"
